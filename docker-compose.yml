services:
  kafka:
    image: apache/kafka:4.0.0
    container_name: kafka
    environment:
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_NODE_ID=1
      # Настраиваем отдельные listeners: INTERNAL (для контейнерной сети) и EXTERNAL (для хоста Windows)
      - KAFKA_LISTENERS=INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:29092,EXTERNAL://host.docker.internal:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
    ports:
      - "9092:9092"   # внешний доступ (EXTERNAL)
      - "29092:29092" # при необходимости тестов из других контейнеров можно тоже использовать
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  # rest-proxy:
  #   image: confluentinc/cp-kafka-rest:7.5.0
  #   container_name: kafka-rest-proxy
  #   depends_on:
  #     - kafka
  #   environment:
  #     KAFKA_REST_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka:29092"
  #     KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
  #     KAFKA_REST_HOST_NAME: "rest-proxy"
  #     KAFKA_REST_CONSUMER_REQUEST_TIMEOUT_MS: 30000
  #   ports:
  #     - "8082:8082"
  #   restart: unless-stopped