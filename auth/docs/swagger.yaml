definitions:
  handler.LoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  handler.RefreshRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  handler.UserRegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  response.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  response.TokenResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  response.UserRegisterResponse:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  response.UserResponse:
    properties:
      email:
        type: string
      id:
        type: string
    type: object
info:
  contact: {}
  title: LinkVault AuthService API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Вход существующего пользователя
      parameters:
      - description: Параметры входа пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный вход пользователя
          schema:
            $ref: '#/definitions/response.TokenResponse'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Неверный пароль
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Пользователь не найден
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Вход пользователя
      tags:
      - users
  /api/v1/auth/refresh:
    post:
      consumes:
      - application/json
      description: Обновление refresh-токена
      parameters:
      - description: Параметры обновления токена
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешное обновление токена
          schema:
            $ref: '#/definitions/response.TokenResponse'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Неверный токен
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Обновление токена
      tags:
      - users
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: Регистрация нового пользователя
      parameters:
      - description: Параметры регистрации пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Успешная регистрация пользователя
          schema:
            $ref: '#/definitions/response.UserRegisterResponse'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "409":
          description: Пользователь уже существует
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Регистрация пользователя
      tags:
      - users
  /api/v1/profile/me:
    get:
      consumes:
      - application/json
      description: Получение своего профиля по токену
      produces:
      - application/json
      responses:
        "200":
          description: Полученный профиль
          schema:
            $ref: '#/definitions/response.UserResponse'
        "404":
          description: Пользователь не найден
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Получпение профиля
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
